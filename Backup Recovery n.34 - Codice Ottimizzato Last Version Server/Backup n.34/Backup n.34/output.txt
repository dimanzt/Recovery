Number of runs: 1/1
Simulation Parameters: 
Seed: 120
Alpha demand: 0.2
Prob edge green: 0.002
Distance metric: broken_capacity
Type of betweeness: exact
Graph: Abilene
Dimensions of the Graph
Nodes: 11
Edges: 14
Total: 25
Seed Utilized: 120.000000: 
Diameter of the Graph: 5
Flow Variation: True
Vario il numero di coppie fissando il flusso: 3
Number of Pairs Selected: 1
Fixed Disruption
Coppie selezionate Random:
Subset of Random Couples:
[(1, 10, 2)]
Abilene
Optimize a model with 39 rows, 28 columns and 98 nonzeros
Presolve removed 14 rows and 0 columns
Presolve time: 0.00s
Presolved: 25 rows, 28 columns, 84 nonzeros

Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    1.0000000e+00   3.000000e+00   0.000000e+00      0s
       1    1.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 1 iterations and 0.00 seconds
Optimal objective  1.000000000e+00
Check Routability True
True
[(1, 10, 2)]
iterazione 0 / 0 --> 1-10
max flow residual: 7.0
domanda assegnata: 3/3
Couples of Green Edges Seclected:
[(1, 10, 3)]
C:/Users/user/Novella/image_graph_dot/stats/statistiche/Abilene_Destroyed.txt
{'status': 'destroyed', 'type': 'normal', 'style': 'dashed', 'capacity': 5, 'color': 'red'}
{'LinkType': u'OC-192', 'status': 'on', 'style': 'solid', 'capacity': 4, 'weight': 0.025, 'color': 'black', 'labelfont': 'gray', 'LinkNote': u'c', 'LinkLabel': u'OC-192c', 'type': 'normal'}
{'splitted_edge': False, 'style': 'bold', 'demand': 3, 'color': 'green', 'type': 'green', 'root_edge': (1, 10)}
{'LinkType': u'OC-192', 'status': 'on', 'style': 'solid', 'capacity': 4, 'weight': 0.025, 'color': 'black', 'labelfont': 'gray', 'LinkNote': u'c', 'LinkLabel': u'OC-192c', 'type': 'normal'}
{'splitted_edge': False, 'style': 'bold', 'demand': 3, 'color': 'green', 'type': 'green', 'root_edge': (1, 10)}
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
{'status': 'on', 'weight': 0, 'color': '""', 'Country': u'United States', 'pos': '"-84,33!"', 'Longitude': -84.38798, 'label': u'Atlanta', 'betweeness': 0.0, 'Internal': 1, 'Latitude': 33.749, 'type': 'normal', 'id': 9}
{'LinkType': u'OC-192', 'status': 'on', 'style': 'solid', 'capacity': 4, 'weight': 0.025, 'color': 'black', 'labelfont': 'gray', 'LinkNote': u'c', 'LinkLabel': u'OC-192c', 'type': 'normal'}
{'status': 'destroyed', 'type': 'normal', 'style': 'dashed', 'capacity': 7, 'color': 'red'}
*********************************************
Start Iteritive Split and Prune
*********************************************
Optimize a model with 28 rows, 18 columns and 63 nonzeros
Presolve removed 22 rows and 12 columns
Presolve time: 0.00s
Presolved: 6 rows, 6 columns, 18 nonzeros

Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    1.0000000e+00   0.000000e+00   0.000000e+00      0s
       0    1.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 0 iterations and 0.00 seconds
Optimal objective  1.000000000e+00
Check Routability True
*********************************************
END Iteritive Split and Prune
*********************************************
soluzione parziale ISP
[]
[]
soluzione rimanenete MCG
[]
[]
Soluzione algoritmo ISP: 
Nodi ripristinati
[]
Archi ripristinati
[]
0
0
--- 0.029 seconds ---
Inizio algoritmo OPTIMAL recovery
C:/Users/user/Novella/image_graph_dot/stats/statistiche/Abilene_Destroyed.txt
INIZIO Optimal Recovery model
ERRORE: COSTRUZIONE VETTORE ARCS: AGGIUNTO DUE VOLTE STESSO ARCO ?
(1, 10)
ERRORE: COSTRUZIONE VETTORE CAPACITY: AGGIUNTO DUE VOLTE LO STESSO ARCO
(1, 10)
Optimize a model with 50 rows, 67 columns and 151 nonzeros
Found heuristic solution: objective 1
Presolve removed 22 rows and 27 columns
Presolve time: 0.00s
Presolved: 28 rows, 40 columns, 105 nonzeros
Variable types: 28 continuous, 12 integer (12 binary)

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 1 available processors)

Optimal solution found (tolerance 1.00e-04)
Best objective 1.000000000000e+00, best bound 1.000000000000e+00, gap 0.0%
node usati
[]
archi_usati
[(1, 10)]
0
1
arco ripristinato 1-10: 
--- 0.02 seconds ---
Inizio algoritmo Multicommodity Generale
Optimize a model with 39 rows, 28 columns and 98 nonzeros
Presolve removed 14 rows and 0 columns
Presolve time: 0.00s
Presolved: 25 rows, 28 columns, 84 nonzeros

Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   6.000000e+00   0.000000e+00      0s
       1    3.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 1 iterations and 0.00 seconds
Optimal objective  3.000000000e+00
La funzione obiettivo del multicommodity vale:
3.0
Soluzione Multicommodity Generale: 
Nodi da ripristinare
[]
Archi da ripristinare
[(1, 10)]
0
1
arco ripristinato 1-10: 
Inizio algoritmo Multicommodity WORST
Optimize a model with 39 rows, 28 columns and 98 nonzeros
Presolve removed 14 rows and 0 columns
Presolve time: 0.00s
Presolved: 25 rows, 28 columns, 84 nonzeros

Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   6.000000e+00   0.000000e+00      0s
       1    3.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 1 iterations and 0.00 seconds
Optimal objective  3.000000000e+00
La funzione obiettivo del multicommodity vale:
3.0
Optimize a model with 51 rows, 67 columns and 169 nonzeros
Found heuristic solution: objective -18
Presolve removed 45 rows and 61 columns
Presolve time: 0.00s
Presolved: 6 rows, 6 columns, 18 nonzeros
Variable types: 6 continuous, 0 integer (0 binary)

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 1 available processors)

Optimal solution found (tolerance 1.00e-04)
Best objective -1.800000000000e+01, best bound -1.800000000000e+01, gap 0.0%
node usati
[6, 7, 8]
archi_usati
[(0, 1), (1, 10), (2, 9), (5, 8), (6, 7), (7, 8), (7, 10), (8, 9), (9, 10)]
Soluzione algoritmo Multicommodity WORST
Nodi da ripristinare
[6, 7, 8]
Archi da ripristinare
[(0, 1), (1, 10), (2, 9), (5, 8), (6, 7), (7, 8), (7, 10), (8, 9), (9, 10)]
3
9
nodo ripristinato 6 : 
nodo ripristinato 7 : 
nodo ripristinato 8 : 
arco ripristinato 0-1: 
arco ripristinato 1-10: 
arco ripristinato 2-9: 
arco ripristinato 5-8: 
arco ripristinato 6-7: 
arco ripristinato 7-8: 
arco ripristinato 7-10: 
arco ripristinato 8-9: 
arco ripristinato 9-10: 
Inizio algoritmo Multicommodity BEST
Optimize a model with 39 rows, 28 columns and 98 nonzeros
Presolve removed 14 rows and 0 columns
Presolve time: 0.00s
Presolved: 25 rows, 28 columns, 84 nonzeros

Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   6.000000e+00   0.000000e+00      0s
       1    3.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 1 iterations and 0.00 seconds
Optimal objective  3.000000000e+00
La funzione obiettivo del multicommodity da usare per il best vale:
3.0
Optimize a model with 51 rows, 67 columns and 169 nonzeros
Found heuristic solution: objective 1
Presolve removed 45 rows and 60 columns
Presolve time: 0.00s
Presolved: 6 rows, 7 columns, 20 nonzeros
Variable types: 6 continuous, 1 integer (1 binary)

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 1 available processors)

Optimal solution found (tolerance 1.00e-04)
Best objective 1.000000000000e+00, best bound 1.000000000000e+00, gap 0.0%
node usati
[]
archi_usati
[(1, 10)]
Soluzione algoritmo Multicommodity Best
Nodi da ripristinare
[]
[(1, 10)]
0
1
arco ripristinato 1-10: 
Inizio algoritmo Shortest path recovery
{(1, 10): [[1, 10]]}
arco ripristinato 1-10: 
Soluzione algoritmo Shortest Based Recovery - No commitment
Nodi da ripristinare
[]
Archi da ripristinare
[(1, 10)]
0
1
arco ripristinato 1-10: 
Optimize a model with 17 rows, 9 columns and 32 nonzeros
Presolve removed 17 rows and 9 columns
Presolve time: 0.00s
Presolve: All rows and columns removed
Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    3.0000000e+00   0.000000e+00   0.000000e+00      0s

Solved in 0 iterations and 0.00 seconds
Optimal objective  3.000000000e+00
Inizio algoritmo Ripara tutto
inzio recovery all
Soluzione algoritmo Recovery All
Nodi da ripristinare
[6, 7, 8]
Archi da ripristinare
[(0, 1), (1, 10), (2, 9), (5, 8), (6, 7), (7, 8), (7, 10), (8, 9), (9, 10)]
3
9
nodo ripristinato 6 : 
nodo ripristinato 7 : 
nodo ripristinato 8 : 
arco ripristinato 0-1: 
arco ripristinato 1-10: 
arco ripristinato 2-9: 
arco ripristinato 5-8: 
arco ripristinato 6-7: 
arco ripristinato 7-8: 
arco ripristinato 7-10: 
arco ripristinato 8-9: 
arco ripristinato 9-10: 
C:/Users/user/Novella/image_graph_dot/stats/statistiche/stat_simulations_Abilene_Prob_0.002_Alpha_0.2.txt
tot_isp 0 = 0 + 0
tot_opt 1 = 0 + 1
tot_mcg 12 = 3 + 9
tot_mcw 12 = 3 + 9
tot_mcb 12 = 3 + 9
tot_srt 1 = 0 + 1
tot_rnk 12 = 3 + 9
tot_rnk_com 12 = 3 + 9
tot_rnk_no_com 12 = 3 + 9
tot_all 12 = 3 + 9
total demand: 3.000000
demand not satisfied shortest: 0.000000
demand satisfied by shortest: 3.000000
Perc of demand satisfied by shortest: 100
demand not satisfied ranked comm: 1.000000
demand satified by ranked comm: 2.000000
Perc of demand satisfied by rank comm: 66
Errore: Num Riparazione Ottimo peggiore di qualche altro algoritmo!
1
